INCLUDE console.inc
.DATA
	X DB 100 DUP (?)
	Y DB 100 DUP (?)
.CODE
PROC1 PROC
R:	INCHAR CL
	CMP CL, '.'
	JE B
	INC EAX
	MOV [ESI+EAX-1], CL
	JMP R
B:	RET
PROC1 ENDP

PROC2 PROC
	PUSH EAX
	MOV DX, 10
T:	MOV AX, 0
	CMP BYTE PTR ESI+ECX-1, 'a'
	JB P
	CMP BYTE PTR ESI+ECX-1, 'z'
	JA P
	MOV AL, BYTE PTR [ESI+ECX-1] - 'a'
	DIV DL
	MOV [ESI+ECX-1], AL
P:	LOOP T
	POP EAX
	RET	
PROC2 ENDP

PROC3 PROC
	PUSH EAX
	MOV EAX, 0
F:	CMP ESI+EAX, ESI+EDX-1-EAX
	JAE F2
	MOV CH, BYTE PTR [ESI+EAX]
	MOV CL, BYTE PTR [ESI+EDX-1-EAX]
	MOV BYTE PTR [ESI+EDX-1-EAX], CH
	MOV BYTE PTR [ESI+EAX], CL
	INC EAX
	JMP F
F2:	POP EAX
	RET
PROC3 ENDP

START:	
	MOV EAX, 0
	LEA ESI, X
	CALL PROC1
	MOV EBX, EAX
	XOR EAX, EAX
	LEA ESI, Y
	CALL PROC1
	CMP EBX, 100
	JA ERROR
	CMP EAX, 100
	JA ERROR
	CMP EBX, EAX
	JAE L1

	MOV ECX, EAX
	LEA ESI, X
	CALL PROC2
	LEA ESI, Y
	MOV EDX, EBX
	CALL PROC3
	JMP L2
L1:	MOV ECX, EBX
	LEA ESI, X
	CALL PROC2
	LEA ESI, Y
	MOV EDX, EAX
	CALL PROC3
	MOV ECX, EBX
	MOV ESI, 0
L2:	OUTCHAR BYTE PTR X[ESI]	
	INC ESI
	LOOP L2
	MOV ECX, EAX
	MOV ESI, 0
	NEWLINE
L3:	OUTCHAR BYTE PTR Y[ESI]	
	INC ESI
	LOOP L3
	JMP E
ERROR:	OUTSTR 'ERROR'
E:
EXIT
END START